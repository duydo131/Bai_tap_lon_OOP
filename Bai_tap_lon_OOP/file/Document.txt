0. class bổ sung
class Caculate : - long sum(List<Long>) : tỉnh toonge các phần tử trong list
		 - <T extends DataOneDay> Map<STOCK, T> sort(Map<STOCK, T>) : sắp xếp map theo khối lượng
		 
class Format :  - String formatLong(Long) : format số nguyên lớn
		- double formatsDouble(double) : format số thực
		- Date getDate(Date, int) : trả về ngày được thêm

1. Class InputData (tất cả dữ liệu tính đến ngày được chọn). method static

- boolean testDay(Date) : kiểm tra có dữ liệu ngày cần tìm không

- ArrayList<DataOneDay> getDataOneWeekOneStock(STOCK, Date) : dữ liệu của cổ phiếu trong ngày của tuần được chọn.

- DataOneDay priceMaxOneWeek(STOCK, Date) : dữ liệu của ngày có giá đóng cửa cao nhất của cổ phiếu trong tuần của ngày được chọn.

- DataOneDay priceMinOneWeek(STOCK, Date) : dữ liệu của ngày có giá đóng cửa thấp nhất của cổ phiếu trong tuần của ngày được chọn.

- DataOneday volumeMaxOneWeek(STOCK, Date) : dữ liệu của ngày có khối lượng giao dịch lớn nhất của cổ phiếu trong tuần của ngày được chọn.

- DataOneday volumeMinOneWeek(STOCK, Date) : dữ liệu của ngày có khối lượng giao dịch min nhất của cổ phiếu trong tuần của ngày được chọn.

- long volumeSumOneWeek(STOCK, Date) : tổng khối lượng giao dịch trong tuần của ngày được chọn.

- int getMonth(Date) : trả về tháng của ngày được chọn.

- ArrayList<DataOneDay> getDataOneMonthOneStock(STOCK, MONTH) : dữ liệu của cổ phiếu của ngày được chọn.

- DataOneDay priceMaxOneMonth(STOCK, MONTH) : dữ liệu của ngày có giá đóng cửa cao nhất của cổ phiếu trong tháng được chọn.

- DataOneDay priceMinOneMonth(STOCK, MONTH) : dữ liệu của ngày có giá đóng cửa thấp nhất của cổ phiếu trong tháng được chọn.

- DataOneday volumeMaxOneMonth(STOCK, MONTH) : dữ liệu của ngày có khối lượng giao dịch lớn nhất của cổ phiếu trong tháng được chọn.

- DataOneday volumeMinOneMonth(STOCK, MONTH) : dữ liệu của ngày có khối lượng giao dịch min nhất của cổ phiếu trong tháng được chọn.

- long volumeSumOneMonth(STOCK, MONTH) : tổng khối lượng giao dịch trong tháng được chọn.

- Map<STOCK, DataOneDay> getToday(Date) : dữ liệu của tất cả cổ phiếu trong ngày được chọn (Phải xử lý để lọc VNINDEX và HNXINDEX riêng ).

- Map<STOCK, DataOneDay> getTodayVN30(Date) : dữ liệu của cổ phiếu VN30 trong ngày được chọn (VNINDEX ở cuối ).

- Map<STOCK, DataOneDay> getTodayHNX30(Date) : dữ liệu của cổ phiếu HNX30 trong ngày được chọn (HNXINDEX ở cuối Map).

- Map<STOCK, ArrayList<DataOneDay>> getInfo(Date, Date) : dữ liệu tất cả cổ phiếu giữa 2 ngày được chọn (Phải xử lý để lọc VNINDEX và HNXINDEX riêng ).

- Map<STOCK, ArrayList<DataOneDay>> getInfoVN30(Date, Date) : dữ liệu cổ phiếu VN30 giữa 2 ngày được chọn (VNINDEX ở cuối).

- Map<STOCK, ArrayList<DataOneDay>> getInfoHNX30(Date, Date) : dữ liệu cổ phiếu HNX30 giữa 2 ngày được chọn (HNXINDEX ở cuối Map).

- double getDifferenceOneDayOneStock(STOCK, Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của 1 cổ phiếu của ngày được chọn.

- Map<STOCK, Double> getDifferenceOneDay(Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của tất cả cổ phiếu của ngày được chọn.

- Map<STOCK, Double> getDifferenceOneDayVN30(Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của cổ phiếu VN30 của ngày được chọn.

- Map<STOCK, Double> getDifferenceOneDayHNX30(Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của cổ phiếu HNX30 của ngày được chọn.

- Map<Date, Double> getDifferenceOneWeekOneStock(STOCK, Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của 1 cổ phiếu trong tuần của ngày được chọn.

- Map<STOCK, Map<Date, Double>> getDifferenceOneWeek(Date) : trả về lượng thay đổi cuối phiên so với đầu phiên của tất cả cổ phiếu trong tuần của ngày được chọn.

- Map<Date, Double> getDifferenceOneMonthOneStock(STOCK, MONTH) : trả về lượng thay đổi cuối phiên so với đầu phiên của 1 cổ phiếu của tháng được chọn.

- Map<STOCK, Map<Date, Double>> getDifferenceOneMonth(MONTH) : trả về lượng thay đổi cuối phiên so với đầu phiên của tất cả cổ phiếu của tháng được chọn.

- Set(STOCK) : stockVN30() : trả về mã cổ phiếu trong VN30 và VNINDEX

- Set(STOCK) : stockHNX30() : trả về mã cổ phiếu trong VN30 và HASTC

- int increseCounterOneStock(STOCK, Date) : trả về số ngày tăng của cổ phiếu trước ngày được chọn.

- Map<STOCK, Integer> increseCounter(Date) : trả về số ngày tăng của tất cả cổ phiếu trước ngày được chọn.

- Map<STOCK, Integer> increseCounterVN30(Date) : trả về số ngày tăng của cổ phiếu VN30 trước ngày được chọn.

- Map<STOCK, Integer> increseCounterHNX30(Date) : trả về số ngày tăng của cổ phiếu HNX30 trước ngày được chọn.

- int decreseCounterOneStock(STOCK, Date) : trả về số ngày giảm của cổ phiếu trước ngày được chọn.

- Map<STOCK, Integer> decreseCounter(Date) : trả về số ngày giảm của tất cả cổ phiếu trước ngày được chọn.

- Map<STOCK, Integer> decreseCounterVN30(Date) : trả về số ngày giảm của cổ phiếu VN30 trước ngày được chọn.

- Map<STOCK, Integer> decreseCounterHNX30(Date) : trả về số ngày giảm của cổ phiếu HNX30 trước ngày được chọn.


// 	30/4
- STOCK getStockByNumericalVN30(Date, int) : trả về stock có giá đóng cửa đứng theo vị trí trong ngày trong VN30

- STOCK getStockByNumericalHNX30(Date, int) : trả về stock có giá đóng cửa đứng theo vị trí trong ngày trong VN30


2. Class Data : method static
- Map<STOCK, DataOneStock> getDataVN30() : trả về dữ liệu VN30, VNINDEX.

- Map<STOCK, DataOneStock> getDataHNX30() : trả về dữ liệu HNX30, HNXINDEX.

- add(STOCK, DataOneDay, EXCHANGES) : thêm dữ liệu.

- print() : in dữ liệu.

3. Class DataOneStock : method non-static
- ArrayList<DataOneDay> getData() : trả về dữ liệu của cổ phiếu.

- void setData() : cài đặt dữ liệu của cổ phiếu.

- void add(DataOneDay) : thêm 1 ngày dữ liệu.

- DataOneDay getDataOneDay(Date date) : lấy dữ liệu cổ phiếu của ngày được chọn.

- void print() : in ra console dữ liệu cổ phiếu.

4. Class DataOneDay : method non-static
- Date getDate() : trả về ngày.

- double getGiaMoCua() : trả về giá mở cửa.

- double getGiaMax() : trả về giá Max trong ngày.

- double getGiaMin() : trả về giá Min trong ngày.
	
- double getGiaDongCua() : trả về giá đóng cửa.

- long getKL() : trả về khối lượng giao dịch trong ngày.

- long getThanhKhoan() : trả về thanh khoản

- double getThayDoi() : trả về Thay đổi trong ngày
 
- void print() : in ra thông tin cổ phiếu trong ngày.
	

5. Class ReadFile : method static
- LoadData() : đọc dữ liệu từ file (luôn phải thực hiện câu lệnh này để dữ liệu được tải lên).


6. Enum EXCHANGES : nhóm cổ phiếu (VN30, HNX30).

7. Enum STOCK : cổ phiếu (tên công ty, khối lượng cổ phiếu đang lưu hành).
- String getNameCompany() : trả về tên công ty.

- String getName() : trả về mã cổ phiếu.

- long getOutstandingShares() : trả về khối lượng cổ phiếu đang lưu hành.

8. Enum MONTH : Month(int).
- method non-static :
     int getMonth() : trả về tháng là só nguyên.
- method static : 
     MONTH getName(int) : trả về MONTH tương ứng với số đầu vào.

     MONTH monthBefore(MONTH) : trả về tháng trước đó.

     MONTH monthAfter(MONTH) : trả về tháng sau đó.
9. Format : method static
double formatsDouble(double) : định dạng số thực






